{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "SALL",
	"patterns": [		
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#supports"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#storages"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.sal",
				"match": "\\b(if|else|while|for|return|Loop|From|To|DownTo)\\b"
			}]
		},
		"strings": {
			"name": "string.quoted.double.sal",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.sal",
					"match": "\\\\."
				}
			]
		},
		"supports": {
			"patterns": [
				{
					"name": "entity.name.tag.sal",
					"match": "\\b(Title|Calculation|Declarations|Functions|Program|StateMachines|WrapUp)\\b"
				},
				{
					"name": "support.function.sal",
					"match": "\\b(Zone|AssignRef)\\b"
				},
				{
					"name": "support.type.sal",
					"match": "\\b(Constant|Nonvolatile)\\b"
				},
				{
					"name": "support.variable.sal",
					"match": "\\b(State)\\b"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.block.documentation.sal",
					"begin": "/\\*\\*(?!/)",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.sal"
						}
					},
					"end": "\\*/",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.comment.sal"
						}
					},
					"patterns": [
						{
							"include": "#docblock"
						}
					]
				},
				{
					"name": "comment.block.sal",
					"begin": "(/\\*)(?:\\s*((@)internal)(?=\\s|(\\*/)))?",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.comment.sal"
						},
						"2": {
							"name": "storage.type.internaldeclaration.sal"
						},
						"3": {
							"name": "punctuation.decorator.internaldeclaration.sal"
						}
					},
					"end": "\\*/",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.comment.sal"
						}
					}
				}
			]
		},
		"constants": {
			"patterns": [				
				{
					"match":"\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\b",
      				"name":"constant.numeric.sal"
				}
			]
		},
		"storages": {
			"patterns": [
				{
					"name": "storage.type.sal",
					"match": "\\b(Ai|Boolean|Control|Di|DiSoe|Float|FPAi|Int|Timer|ZoneVar|TimeStamp|AiRef|FPAiRef|DiRef|Soe|SoeSnapshot|Void)\\b"
				}				
			]
		}
	},
	"scopeName": "source.sal"
}